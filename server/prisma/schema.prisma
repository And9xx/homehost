// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Movie {
  id      				Int      	@id @default(autoincrement())
  type					String
  tmdb_id				Int			@unique
  fs_path				String   	@unique
  url_path				String		@unique
  ctime					DateTime
  mtime					DateTime
  adult    				Boolean
  backdrop_path			String
  budget				Int
  genres				Genre[]
  imdb_id				String
  overview				String
  popularity			Float
  poster_path			String
  production_companies	ProductionCompany[]
  release_date			String
  revenue				Int
  runtime				Int
  tagline				String
  title					String
  vote_average			Float
  vote_count			Int
  credits				Credit[]
  similar				Similar[]
}

model Genre {
	id				Int			@id @default(autoincrement())
	tmdb_id			Int			@unique
	name			String	
	movies			Movie[]
	tv_shows		TVShow[]
}

model ProductionCompany {
	id				Int		@id @default(autoincrement())
	tmdb_id			Int		@unique
	logo_path		String?
	name			String
	origin_country	String	
	movies			Movie[]
	tv_shows		TVShow[]
}

model Credit {
	id						Int			@id @default(autoincrement())
	tmdb_id					Int			@unique
	adult					Boolean?
	gender					Int
	known_for_department	String?
	name					String
	popularity				Float?
	profile_path			String?
	cast_id					Int?
	character				String?
	credit_id				String
	order					Int?
	department				String?
	job						String?
	movies					Movie[]
	created_by				TVShow[] 	@relation(name: "created_by")
	credits					TVShow[] 	@relation(name: "credits")
}

model Similar {
	id				Int			@id @default(autoincrement())
	tmdb_id			Int			@unique
	title			String?
	name			String?
	release_date	String?
	first_air_date	String?
	overview		String
	backdrop_path	String?
	poster_path		String?
	movie			Movie? 		@relation(fields: [movie_tmdb_id], references: [tmdb_id])
	show			TVShow? 	@relation(fields: [show_tmdb_id], references: [tmdb_id])
	movie_tmdb_id	Int?
	show_tmdb_id	Int?
}

model TVShow {
  id      				Int      				@id @default(autoincrement())
  type					String
  tmdb_id				Int						@unique
  backdrop_path			String
  created_by			Credit[] 				@relation("created_by")
  genres				Genre[]
  name					String
  overview				String
  popularity			Float
  poster_path			String
  production_companies	ProductionCompany[]
  seasons				Season[]
  tagline				String
  vote_average			Float
  vote_count			Int
  credits				Credit[]				@relation("credits")
  similar				Similar[]
  imdb_id				String
}

model Season {
	id      		Int      	@id @default(autoincrement())
	tmdb_id			Int			@unique
	air_date		String
	name			String
	overview		String
	poster_path		String
	season_number	Int
	episodes 		Episode[]
	show			TVShow 		@relation(fields: [show_tmdb_id], references: [tmdb_id])
	show_tmdb_id	Int
}

model Episode {
	id      				Int      	@id @default(autoincrement())
	type					String
	tmdb_id					Int			@unique
	fs_path					String   	@unique
  	url_path				String		@unique
  	ctime					DateTime
  	mtime					DateTime
	air_date				String
	episode_number			Int
	name					String
	overview				String
	season_number			Int
	still_path				String
	vote_average			Float
	vote_count				Int
	season    				Season    	@relation(fields: [season_tmdb_id], references: [tmdb_id])
  	season_tmdb_id  		Int
}

model Album {
	id      				Int		@id @default(autoincrement())
	type					String
	spotify_id				String	@unique
	album_type				String
	artists					Artist[]
	images					String
	label					String
	name					String
	popularity				Int?
	release_date			String
	songs					Song[]
}

model Artist {
	id      				Int		@id @default(autoincrement())
	type					String
	spotify_id				String	@unique
	name					String
	images					String
	popularity				Int?
	albums    				Album[]
}

model Song {
	id      				Int      	@id @default(autoincrement())
	spotify_id				String		@unique
	fs_path					String   	@unique
	url_path				String		@unique
	ctime					DateTime
	mtime					DateTime
	disc_number				Int
	duration_ms				Int
	explicit				Boolean
	name					String
	preview_url				String?
	track_number			Int
	album    				Album    	@relation(fields: [album_spotify_id], references: [spotify_id])
	album_spotify_id  		String
}